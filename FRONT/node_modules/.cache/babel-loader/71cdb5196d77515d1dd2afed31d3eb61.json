{"ast":null,"code":"var _jsxFileName = \"/Users/edwingg/Documents/prueba/chat_challenge/FRONT/src/Chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useSubscription, useMutation, gql } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst link = new WebSocketLink({\n  uri: 'ws://localhost:4000/',\n  options: {\n    reconnect: true\n  }\n});\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache(),\n  link\n});\nconst getMessages = gql`\n  subscription {\n  messages {\n    id\n    content\n    user\n  }\n}\n`;\nconst postMessages = gql`\n  mutation ($user: String!, $content:String!) {\n    postMessage(user: $user, content: $content)\n  }\n`;\n\nconst Messages = ({\n  user\n}) => {\n  _s();\n\n  const {\n    data\n  } = useSubscription(getMessages);\n\n  if (!data) {\n    return null;\n  }\n\n  {\n    /* <div\n           key={id}\n           style={{\n             display: 'flex',\n             justifyContent: user === messageUser ? 'flex-end' : 'flex-start',\n             paddingBottom: '1em',\n           }}\n         >\n           {user !== messageUser && (\n             <div\n               style={{\n                 marginRight: '0.5em',\n                 textAlign: 'center',\n                 fontSize: '12pt',\n                 paddingTop: 5\n               }}\n             >\n               {messageUser}\n             </div>\n           )}\n           <div\n             style={{\n               background: user === messageUser ? 'blue' : '#e5e6ea',\n               color: user === messageUser ? 'white' : 'black',\n               padding: '1em',\n               borderRadius: '1em',\n               maxWidth: '60%'\n             }}\n           >\n             {content}\n           </div>\n         </div> */\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.messages.map(({\n      id,\n      user: messageUser,\n      content\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: user === messageUser ? 'flex-end' : 'flex-start',\n          paddingBottom: '1em'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: user === messageUser ? 'blue' : '#e5e6ea',\n            color: user === messageUser ? 'white' : 'black',\n            padding: '1em',\n            borderRadius: '1em',\n            maxWidth: '60%'\n          },\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_s(Messages, \"5LK+53Oia6K8c0VFEgmT72QLLdU=\", false, function () {\n  return [useSubscription];\n});\n\n_c = Messages;\n\nconst Chat = () => {\n  _s2();\n\n  const [state, stateSet] = React.useState({\n    user: '',\n    content: ''\n  });\n  const [pstMessages] = useMutation(postMessages);\n\n  const sendMessage = () => {\n    if (state.content.trim().length > 0) {\n      pstMessages({\n        variables: state\n      });\n    }\n\n    stateSet({ ...state,\n      content: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Messages, {\n      class: \"content is-justify-content-flex-end\",\n      user: state.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input is-success\",\n          type: \"text\",\n          placeholder: \"Usuario\",\n          value: state.user,\n          onChange: evt => stateSet({ ...state,\n            user: evt.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-8\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input is-info\",\n          type: \"text\",\n          placeholder: \"Mensaje\",\n          disabled: state.user.trim().length === 0,\n          value: state.content,\n          onChange: evt => stateSet({ ...state,\n            content: evt.target.value\n          }),\n          onKeyUp: evt => {\n            if (evt.keyCode === 13) {\n              sendMessage();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button is-link is-light\",\n          disabled: state.user.trim().length === 0,\n          onClick: () => sendMessage(),\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this) // </div>\n  ;\n};\n\n_s2(Chat, \"q10LMp6hiXIw8Y53duPAHtqDj8Y=\", false, function () {\n  return [useMutation];\n});\n\n_c2 = Chat;\n\nconst provider = () => {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"features\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"columns is-centered is-vcentered is-mobile\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column is-narrow has-text-centered\",\n            style: {\n              width: '80%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\nexport default provider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"sources":["/Users/edwingg/Documents/prueba/chat_challenge/FRONT/src/Chat.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useSubscription","useMutation","gql","WebSocketLink","link","uri","options","reconnect","client","cache","getMessages","postMessages","Messages","user","data","messages","map","id","messageUser","content","display","justifyContent","paddingBottom","background","color","padding","borderRadius","maxWidth","Chat","state","stateSet","useState","pstMessages","sendMessage","trim","length","variables","evt","target","value","keyCode","provider","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useSubscription,\n  useMutation,\n  gql\n} from '@apollo/client'\nimport { WebSocketLink } from '@apollo/client/link/ws'\n\nconst link = new WebSocketLink({\n  uri: 'ws://localhost:4000/',\n  options: {\n    reconnect: true\n  }\n})\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache(),\n  link\n})\n\nconst getMessages = gql`\n  subscription {\n  messages {\n    id\n    content\n    user\n  }\n}\n`\n\nconst postMessages = gql`\n  mutation ($user: String!, $content:String!) {\n    postMessage(user: $user, content: $content)\n  }\n`\n\nconst Messages = ({ user }) => {\n  const { data } = useSubscription(getMessages)\n  if (!data) {\n    return null\n  }\n\n  {/* <div\n          key={id}\n          style={{\n            display: 'flex',\n            justifyContent: user === messageUser ? 'flex-end' : 'flex-start',\n            paddingBottom: '1em',\n          }}\n        >\n          {user !== messageUser && (\n            <div\n              style={{\n                marginRight: '0.5em',\n                textAlign: 'center',\n                fontSize: '12pt',\n                paddingTop: 5\n              }}\n            >\n              {messageUser}\n            </div>\n          )}\n          <div\n            style={{\n              background: user === messageUser ? 'blue' : '#e5e6ea',\n              color: user === messageUser ? 'white' : 'black',\n              padding: '1em',\n              borderRadius: '1em',\n              maxWidth: '60%'\n            }}\n          >\n            {content}\n          </div>\n        </div> */}\n  return (\n    <>\n      {data.messages.map(({ id, user: messageUser, content }) => (\n        <div key={id}>\n          <div\n            key={id}\n            style={{\n              display: 'flex',\n              justifyContent: user === messageUser ? 'flex-end' : 'flex-start',\n              paddingBottom: '1em',\n            }}\n          >\n            <div\n              style={{\n                background: user === messageUser ? 'blue' : '#e5e6ea',\n                color: user === messageUser ? 'white' : 'black',\n                padding: '1em',\n                borderRadius: '1em',\n                maxWidth: '60%'\n              }}\n            >\n              {content}\n            </div>\n          </div>\n        </div>\n      ))}\n    </>\n  )\n}\n\nconst Chat = () => {\n  const [state, stateSet] = React.useState({\n    user: '',\n    content: ''\n  })\n\n  const [pstMessages] = useMutation(postMessages)\n  const sendMessage = () => {\n    if (state.content.trim().length > 0) {\n      pstMessages({\n        variables: state\n      })\n    }\n    stateSet({\n      ...state,\n      content: ''\n    })\n  }\n  return (\n    <div>\n      <Messages class='content is-justify-content-flex-end' user={state.user} />\n      <div class='columns'>\n        <div class='column is-2'>\n          <input\n            class='input is-success' type='text' placeholder='Usuario' value={state.user} onChange={(evt) => stateSet({\n              ...state,\n              user: evt.target.value\n            })}\n          />\n        </div>\n        <div class='column is-8'>\n          <input\n            class='input is-info' type='text' placeholder='Mensaje' disabled={state.user.trim().length === 0} value={state.content} onChange={(evt) => stateSet({\n              ...state,\n              content: evt.target.value\n            })}\n            onKeyUp={(evt) => {\n              if (evt.keyCode === 13) {\n                sendMessage()\n              }\n            }}\n          />\n        </div>\n        <div class='column is-2'>\n          <button class='button is-link is-light' disabled={state.user.trim().length === 0} onClick={() => sendMessage()}>Enviar</button>\n        </div>\n      </div>\n    </div>\n    // </div>\n  )\n}\n\nconst provider = () => {\n  return (\n    <ApolloProvider client={client}>\n      <div class='features'>\n        <div class='container'>\n          <div class='columns is-centered is-vcentered is-mobile'>\n            <div class='column is-narrow has-text-centered' style={{ width: '80%' }}>\n              <Chat />\n            </div>\n          </div>\n        </div>\n      </div>\n    </ApolloProvider>\n  )\n}\n\nexport default provider\n"]},"metadata":{},"sourceType":"module"}