{"ast":null,"code":"var _jsxFileName = \"/Users/edwingg/Documents/prueba/chat_challenge/FRONT/src/Chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery // useSubscription,\n// useMutation,\n, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n});\nconst getMessages = gql`\n  query {\n  messages {\n    id\n    content\n    user\n  }\n}\n`;\n\nconst Messages = ({\n  user\n}) => {\n  _s();\n\n  const {\n    data\n  } = useQuery(getMessages);\n\n  if (!data) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.messages.map(({\n      id,\n      user: messageUser,\n      content\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: user === messageUser ? 'flex-end' : 'flex-start',\n        paddingBottom: '1em'\n      },\n      children: [user !== messageUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 50,\n          width: 50,\n          marginRight: '0.5em',\n          border: '2px solid #e5e6ea',\n          borderRadius: 25,\n          textAlign: 'center',\n          fontSize: '18pt',\n          paddingTop: 5\n        },\n        children: messageUser.slice(0, 2).toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: user === messageUser ? 'blue' : '#e5e6ea',\n          color: user === messageUser ? 'white' : 'black',\n          padding: '1em',\n          borderRadius: '1em',\n          maxWidth: '60%'\n        },\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_s(Messages, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Messages;\n\nconst Chat = () => {\n  _s2();\n\n  const [state, stateSet] = React.useState({\n    user: 'Jack',\n    content: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Messages, {\n      class: \"content is-justify-content-flex-end\",\n      user: state.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column is-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input is-success\",\n          type: \"text\",\n          placeholder: \"Usuario\",\n          value: state.user,\n          onChange: evt => stateSet({ ...state,\n            user: evt.target.valude\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input is-info\",\n          type: \"text\",\n          placeholder: \"Mensaje\",\n          value: state.content,\n          onChange: evt => stateSet({ ...state,\n            content: evt.target.valude\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this) // </div>\n  ;\n};\n\n_s2(Chat, \"FBKm/X2WKjZnlU0ALrgcJF4yvQM=\");\n\n_c2 = Chat;\n\nconst provider = () => {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"features\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"columns is-centered is-vcentered is-mobile\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column is-narrow has-text-centered\",\n            style: {\n              width: '80%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\nexport default provider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"sources":["/Users/edwingg/Documents/prueba/chat_challenge/FRONT/src/Chat.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","getMessages","Messages","user","data","messages","map","id","messageUser","content","display","justifyContent","paddingBottom","height","width","marginRight","border","borderRadius","textAlign","fontSize","paddingTop","slice","toUpperCase","background","color","padding","maxWidth","Chat","state","stateSet","useState","evt","target","valude","provider"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  // useSubscription,\n  // useMutation,\n  gql\n} from '@apollo/client'\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n})\n\nconst getMessages = gql`\n  query {\n  messages {\n    id\n    content\n    user\n  }\n}\n`\n\nconst Messages = ({ user }) => {\n  const { data } = useQuery(getMessages)\n  if (!data) {\n    return null\n  }\n  return (\n    <>\n      {data.messages.map(({ id, user: messageUser, content }) => (\n        <div\n          key={id}\n          style={{\n            display: 'flex',\n            justifyContent: user === messageUser ? 'flex-end' : 'flex-start',\n            paddingBottom: '1em',\n          }}\n        >\n          {user !== messageUser && (\n            <div\n              style={{\n                height: 50,\n                width: 50,\n                marginRight: '0.5em',\n                border: '2px solid #e5e6ea',\n                borderRadius: 25,\n                textAlign: 'center',\n                fontSize: '18pt',\n                paddingTop: 5\n              }}\n            >\n              {messageUser.slice(0, 2).toUpperCase()}\n            </div>\n          )}\n          <div\n            style={{\n              background: user === messageUser ? 'blue' : '#e5e6ea',\n              color: user === messageUser ? 'white' : 'black',\n              padding: '1em',\n              borderRadius: '1em',\n              maxWidth: '60%'\n            }}\n          >\n            {content}\n          </div>\n        </div>\n      ))}\n    </>\n  )\n}\n\nconst Chat = () => {\n  const [state, stateSet] = React.useState({\n    user: 'Jack',\n    content: ''\n  })\n  return (\n    <div>\n      <Messages class='content is-justify-content-flex-end' user={state.user} />\n      <div class='columns'>\n        <div class='column is-2'>\n          <input class='input is-success' type='text' placeholder='Usuario' value={state.user} onChange={(evt) => stateSet({\n            ...state,\n            user: evt.target.valude\n          })} />\n        </div>\n        <div class='column'>\n          <input class='input is-info' type='text' placeholder='Mensaje' value={state.content} onChange={(evt) => stateSet({\n            ...state,\n            content: evt.target.valude\n          })} />\n        </div>\n      </div>\n    </div>\n    // </div>\n  )\n}\n\nconst provider = () => {\n  return (\n    <ApolloProvider client={client}>\n      <div class='features'>\n        <div class='container'>\n          <div class='columns is-centered is-vcentered is-mobile'>\n            <div class='column is-narrow has-text-centered' style={{ width: '80%' }}>\n              <Chat />\n            </div>\n          </div>\n        </div>\n      </div>\n    </ApolloProvider>\n  )\n}\n\nexport default provider\n"]},"metadata":{},"sourceType":"module"}