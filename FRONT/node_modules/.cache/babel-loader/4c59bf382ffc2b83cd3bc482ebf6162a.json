{"ast":null,"code":"var _jsxFileName = \"/Users/edwingg/Documents/prueba/chat_challenge/FRONT/src/Chat.js\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider // useSubscription,\n// useMutation,\n// gql,\n} from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n});\n\nconst Chat = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"I'am sss\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chat;\n\nconst provider = () => {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nexport default provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/edwingg/Documents/prueba/chat_challenge/FRONT/src/Chat.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","client","uri","cache","Chat","provider"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,CAIE;AACA;AACA;AANF,OAOO,gBAPP;;AASA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE,wBADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,MAAMK,IAAI,GAAG,MAAM;AACjB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,I;;AAQN,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,eAAeI,QAAf","sourcesContent":["import React from 'react'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n  // useSubscription,\n  // useMutation,\n  // gql,\n} from '@apollo/client'\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n})\n\nconst Chat = () => {\n  return (\n    <div>\n      I'am sss\n    </div>\n  )\n}\n\nconst provider = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Chat />\n    </ApolloProvider>\n  )\n}\n\nexport default provider\n"]},"metadata":{},"sourceType":"module"}